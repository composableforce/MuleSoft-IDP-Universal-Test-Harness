#%RAML 1.0
title: MuleSoft IDP Universal üåê Test Harness
version: v1
mediaType: application/json
protocols: HTTPS

baseUri: https://{host}/api/{version}
baseUriParameters:
  host:
    type: string
    example: mulesoft-idp-universal-test-harness-uupas5.m3jzw3-1.deu-c1.cloudhub.io










/webapp:
  get:
    responses:
      "200":
        body:
          text/html:
    securedBy:
      - SecurityScheme
  /actions/{actionId}/versions:
    get:
      responses:
        "200":
          body:
            application/json:
              properties:
                id:
                  example: 1.1.0
                  type: string
                description:
                  example: 1.0.0 - PUBLISHED
                  type: string
      securedBy:
        - SecurityScheme
    uriParameters:
      actionId:
        type: field-actionId

securitySchemes:
  SecurityScheme:
    type: Basic Authentication

types:
  field-actionId:
    description: |-
      IDP Document Action Id 

      Published Document Action UUID
    example: 90c3e286-72b5-42ca-92d0-22f86ea8d766
    type: string
    pattern: "[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?"





securitySchemes:
  mulesoft-basic-oauth:
    displayName: üõ°Ô∏è MuleSoft Basic
    type: OAuth 2.0
    description: |

        ### [Configure Connected Apps](https://docs.mulesoft.com/gateway/latest/policies-included-basic-auth-simple)

        ```
          curl --location --request POST 'https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token' \ 
          --header 'Content-Type: application/json' \
          --data-raw '{
            "grant_type": "client_credentials",
            "client_id": "<connected-app-client-id>", 
            "client_secret": "<connected-app-client-secret>" 
          }'
        ```
    settings:
      accessTokenUri: https://anypoint.mulesoft.com/accounts/api/v2/oauth2/token
      authorizationGrants: 
        - client_credentials
    describedBy:
      headers:
        Authorization:
          description: |
            Used to send a valid OAuth 2 access token. Bearer 234235246236236326
          type: string
          example: Bearer 0695bab3-e776-4d33-b61d-092789cb8765
          pattern: ^Bearer [{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$
      responses:
        401:
          description: |
            Bad or expired token. This can happen if the API consumer uses a revoked or expired access token. To fix, you should re-authenticate the user.
          body:
            application/problem+json:
              type: object-commonError
        403:
          description: |
            Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.
          body:
            application/problem+json:
              type: object-commonError






















description: |

  mediaType: application/json

  protocols: HTTPS

  securedBy: üõ°Ô∏è MuleSoft Client ID Enforcement

  | Author | Date | Description
  | -------- | ------- | ------- |
  | G.Jeffcock | 23rd June 2024 | Launched| 
  |||| 
  ||||

  - **getDocumentActionExecution** Retrieves the result of a document action execution.
  - **postDocumentActionExecution** Submits a document to IDP for processing.

documentation:
 - title: üìå Why?
   content: |
     ### MuleSoft IDP Universal üåê REST Connector üîå

 - title: üìå How?
   content: |
     ### MuleSoft IDP Universal üåê REST Connector üîå